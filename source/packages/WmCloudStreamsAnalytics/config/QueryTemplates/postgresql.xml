<?xml version="1.0" encoding="UTF-8"?>
<QUERIES>
	<!-- Summary View -->
	<id value="11">
		<query>(SELECT AVG_RESP,AVAIL,PROVIDER FROM CLS_METRICS_EVENT</query>
		<where>WHERE PROVIDER IS NOT NULL AND length(PROVIDER)&gt;0 AND AVG_RESP &gt;0) AS T1</where>
		<outerquery>SELECT AVG(T1.AVG_RESP) AS PERFORMANCE,AVG(T1.AVAIL) AS AVAILABILITY,T1.PROVIDER FROM</outerquery>
		<outergroup>GROUP BY T1.PROVIDER</outergroup>
		<requiredcolumns>PERFORMANCE,AVAILABILITY,PROVIDER</requiredcolumns>
	</id>
	
	<!-- Usage View -->
	<id value="21">
		<query>SELECT DISTINCT PROVIDER AS PROVIDER_NAMES FROM CLS_TXN_EVENT</query>
		<where>WHERE PROVIDER IS NOT NULL</where>
		<requiredcolumns>PROVIDER_NAMES</requiredcolumns>
	</id>
	<id value="22">
		<query>SELECT COUNT(*) AS PROVIDER_CNT,SUM(TOTAL_DATA_SIZE) AS PROVIDER_DATA,PROVIDER from CLS_TXN_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY PROVIDER</group>
		<requiredcolumns>PROVIDER_CNT,PROVIDER_DATA,PROVIDER</requiredcolumns>
	</id>
	<id value="23">
		<query>SELECT SUM(TOTAL_DATA_SIZE) AS DATA,PROVIDER FROM CLS_TXN_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY PROVIDER</group>
		<requiredcolumns>DATA,PROVIDER</requiredcolumns>
	</id>
	<id value="24">
		<query>SELECT COUNT(*) AS CONNECTOR_CNT,SUM(TOTAL_DATA_SIZE) AS CONNECTOR_DATA,CONNECTOR FROM CLS_TXN_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY CONNECTOR</group>
		<order>ORDER BY CONNECTOR_CNT DESC LIMIT 5</order>
		<requiredcolumns>CONNECTOR_CNT,CONNECTOR_DATA,CONNECTOR</requiredcolumns>
	</id>
	<id value="25">
		<query>(SELECT SUM(TOTAL_DATA_SIZE) AS DATA,CONNECTOR from CLS_TXN_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY CONNECTOR</group>
		<order>ORDER BY DATA DESC) AS T1</order>
		<outerquery>SELECT * FROM</outerquery>
		<outerwhere>WHERE ROWNUM &lt;=5</outerwhere>
		<requiredcolumns>DATA,CONNECTOR</requiredcolumns>
	</id>
	<id value="26">
		<query>SELECT SUM(TOTAL_DATA_SIZE) AS CONSUMER_DATA_USAGE,COUNT(*) AS CONSUMER_CNT,CONSUMER_NAME from CLS_TXN_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY CONSUMER_NAME</group>
		<order>ORDER BY CONSUMER_DATA_USAGE DESC LIMIT 5</order>
		<requiredcolumns>CONSUMER_DATA_USAGE,CONSUMER_CNT,CONSUMER_NAME</requiredcolumns>
	</id>
	<id value="27">
		<query>(SELECT COUNT(*) AS CNT, CONSUMER_NAME from CLS_TXN_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY CONSUMER_NAME</group>
		<order>ORDER BY CNT DESC) AS T1</order>
		<outerquery>SELECT * FROM</outerquery>
		<outerwhere>WHERE ROWNUM &lt;=5</outerwhere>
		<requiredcolumns>CNT,CONSUMER_NAME</requiredcolumns>
	</id>
	
	<!-- Performace View -->
	<id value="31">
		<query>SELECT DISTINCT PROVIDER AS PROVIDER_NAMES FROM CLS_METRICS_EVENT</query>
		<where>WHERE PROVIDER IS NOT NULL</where>
		<order>ORDER BY PROVIDER_NAMES</order>
		<requiredcolumns>PROVIDER_NAMES</requiredcolumns>
	</id>
	<id value="32">
		<query>(SELECT PROVIDER ,EVENT_CREATE_TS,AVG_RESP FROM CLS_METRICS_EVENT</query>
		<where>WHERE AVG_RESP  &lt;&gt; -1 AND CONNECTOR IS NOT NULL AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP) AS T1</where>
		<outergroup>GROUP BY T1.PROVIDER, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS)</outergroup>
		<outerquery>SELECT T1.PROVIDER AS PROVIDER_PERFORMANCE, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS) AS PROVIDER_PERFORMANCE_PERIOD,AVG(T1.AVG_RESP) AS PROVIDER_PERFORMANCE_AVG_RESP FROM</outerquery>
		<outerorder>ORDER BY PROVIDER_PERFORMANCE,PROVIDER_PERFORMANCE_PERIOD</outerorder>
		<requiredcolumns>PROVIDER_PERFORMANCE,PROVIDER_PERFORMANCE_PERIOD,PROVIDER_PERFORMANCE_AVG_RESP</requiredcolumns>
	</id>
	<id value="33">
		<query>(SELECT CONSUMER_NAME,EVENT_CREATE_TS,TOTAL_TIME FROM CLS_TXN_EVENT</query>
		<where>WHERE  PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP) AS T1</where>
		<outergroup>GROUP BY T1.CONSUMER_NAME, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS)</outergroup>
		<outerquery>SELECT T1.CONSUMER_NAME CONSUMER_PERFORMANCE, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS) AS CONSUMER_PERFORMANCE_PERIOD,AVG(T1.TOTAL_TIME) AS CONSUMER_AVG_RESP FROM</outerquery>
		<outerorder>ORDER BY CONSUMER_PERFORMANCE,CONSUMER_PERFORMANCE_PERIOD</outerorder>
		<requiredcolumns>CONSUMER_PERFORMANCE,CONSUMER_PERFORMANCE_PERIOD,CONSUMER_AVG_RESP</requiredcolumns>
	</id>
	<id value="34">
		<query>SELECT AVG(AVG_RESP) AS CONNECTOR_TOP_AVG_RESP,CONNECTOR AS TOP_CONNECTOR_AVG_RESP_TIME FROM CLS_METRICS_EVENT</query>
		<where>WHERE  AVG_RESP  &lt;&gt; -1 AND CONNECTOR IS NOT NULL AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY CONNECTOR</group>
		<order>ORDER BY CONNECTOR_TOP_AVG_RESP DESC LIMIT 5</order>
		<requiredcolumns>CONNECTOR_TOP_AVG_RESP,TOP_CONNECTOR_AVG_RESP_TIME</requiredcolumns>
	</id>
	<id value="35">
		<query>SELECT AVG(AVG_RESP) AS CONNECTOR_LOW_AVG_RESP,CONNECTOR AS LOW_CONNECTOR_AVG_RESP_TIME from CLS_METRICS_EVENT</query>
		<where>WHERE AVG_RESP  &lt;&gt; -1 AND CONNECTOR IS NOT NULL AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY CONNECTOR</group>
		<order>ORDER BY CONNECTOR_LOW_AVG_RESP LIMIT 5</order>
		<requiredcolumns>CONNECTOR_LOW_AVG_RESP,LOW_CONNECTOR_AVG_RESP_TIME</requiredcolumns>
	</id>
	<id value="36">
		<query>(SELECT PROVIDER ,EVENT_CREATE_TS,AVAIL FROM CLS_METRICS_EVENT</query>
		<where>WHERE AVG_RESP  &lt;&gt; -1 AND CONNECTOR IS NOT NULL AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP) AS T1</where>
		<outerquery>SELECT T1.PROVIDER AS PROVIDER_AVAILABILITY, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS) AS PROVIDER_AVAILABILITY_PERIOD, AVG(T1.AVAIL) AS PROVIDER_AVAILABILITY_AVAIL FROM</outerquery>
		<outergroup>GROUP BY T1.PROVIDER, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS)</outergroup>
		<outerorder>ORDER BY PROVIDER_AVAILABILITY_AVAIL,PROVIDER_AVAILABILITY</outerorder>
		<requiredcolumns>PROVIDER_AVAILABILITY,PROVIDER_AVAILABILITY_PERIOD,PROVIDER_AVAILABILITY_AVAIL</requiredcolumns>
	</id>
	<id value="37">
		<query>select AVG(AVAIL) AS TOP_CONNECTOR_AVAIL,CONNECTOR AS TOP_CONNECTOR_AVAILABILITY FROM CLS_METRICS_EVENT</query>
		<where>WHERE AVG_RESP  &lt;&gt; -1 AND CONNECTOR IS NOT NULL AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY CONNECTOR</group>
		<order>ORDER BY TOP_CONNECTOR_AVAIL DESC LIMIT 5</order>
		<requiredcolumns>TOP_CONNECTOR_AVAIL,TOP_CONNECTOR_AVAILABILITY</requiredcolumns>
	</id>
	<id value="38">
		<query>select AVG(AVAIL) AS LOW_CONNECTOR_AVAIL,CONNECTOR AS LOW_CONNECTOR_AVAILABILITY from CLS_METRICS_EVENT</query>
		<where>WHERE AVG_RESP  &lt;&gt; -1 AND CONNECTOR IS NOT NULL AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY CONNECTOR</group>
		<order>ORDER BY LOW_CONNECTOR_AVAIL LIMIT 5</order>
		<requiredcolumns>LOW_CONNECTOR_AVAIL,LOW_CONNECTOR_AVAILABILITY</requiredcolumns>
	</id>
	
	<!-- Error view -->
	<id value="41">
		<query>SELECT DISTINCT PROVIDER AS PROVIDER_NAMES FROM CLS_ERR_EVENT</query>
		<where>WHERE PROVIDER IS NOT NULL</where>
		<order>ORDER BY PROVIDER_NAMES</order>
		<requiredcolumns>PROVIDER_NAMES</requiredcolumns>
	</id>
	<id value="42">
		<query>(SELECT PROVIDER ,EVENT_CREATE_TS FROM CLS_ERR_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP) AS T1</where>
		<outerquery>SELECT T1.PROVIDER AS PROVIDER_NAME_ERROR_TRENDS, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS) AS PROVIDER_ERROR_PERIOD, COUNT(*) AS PROVIDER_ERRORS FROM</outerquery>
		<outergroup>GROUP BY T1.PROVIDER, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS)</outergroup>
		<outerorder>ORDER BY PROVIDER_ERRORS,PROVIDER_NAME_ERROR_TRENDS</outerorder>
		<requiredcolumns>PROVIDER_NAME_ERROR_TRENDS,PROVIDER_ERROR_PERIOD,PROVIDER_ERRORS</requiredcolumns>
	</id>
	<id value="43">
		<query>(SELECT CONSUMER_NAME,EVENT_CREATE_TS FROM CLS_ERR_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP) AS T1</where>
		<outerquery>SELECT T1.CONSUMER_NAME AS CONSUMER_NAME_ERROR_TRENDS, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS) AS CONSUMER_ERROR_PERIOD, COUNT(*) AS CONSUMER_ERRORS FROM</outerquery>
		<outergroup>GROUP BY CONSUMER_NAME, EXTRACT(MONTH FROM T1.EVENT_CREATE_TS)</outergroup>
		<outerorder>ORDER BY CONSUMER_ERRORS, CONSUMER_NAME_ERROR_TRENDS</outerorder>
		<requiredcolumns>CONSUMER_NAME_ERROR_TRENDS,CONSUMER_ERROR_PERIOD,CONSUMER_ERRORS</requiredcolumns>
	</id>
	<id value="44">
		<query>SELECT COUNT(*) AS TOP_SERVICES_ERRORS,SERVICE_NAME AS TOP_SERVICE_NAME FROM CLS_ERR_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY SERVICE_NAME</group>
		<order>ORDER BY TOP_SERVICES_ERRORS DESC LIMIT 5</order>
		<requiredcolumns>TOP_SERVICES_ERRORS,TOP_SERVICE_NAME</requiredcolumns>
	</id>
	<id value="45">
		<query>SELECT COUNT(*) AS LOW_SERVICES_ERRORS,SERVICE_NAME AS LOW_SERVICE_NAME FROM CLS_ERR_EVENT</query>
		<where>WHERE PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY SERVICE_NAME</group>
		<order>ORDER BY LOW_SERVICES_ERRORS LIMIT 5</order>
		<requiredcolumns>LOW_SERVICES_ERRORS,LOW_SERVICE_NAME</requiredcolumns>
	</id>
	
	<!-- SLA -->
	<id value="51">
		<query>SELECT DISTINCT PROVIDER AS DISTINCT_PROVIDER FROM CLS_MON_EVENT</query>
		<order>ORDER BY DISTINCT_PROVIDER</order>
		<requiredcolumns>DISTINCT_PROVIDER</requiredcolumns>
	</id>
	<id value="52">
		<query>(SELECT * FROM CLS_MON_EVENT</query>
		<where>WHERE ALERT_TYPE='Sla' AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP) AS T1</where>
		<outerquery>SELECT T1.PROVIDER AS PROVIDER_NAME_VIOLATION_TRENDS, DATE_PART({MM/DD/MI/HH/MI}, T1.EVENT_CREATE_TS) AS PROVIDER_VIOLATION_PERIOD, COUNT(*) AS PROVIDER_VIOLATION_COUNT FROM</outerquery>
		<outergroup>GROUP BY T1.PROVIDER, DATE_PART({MM/DD/MI/HH/MI}, T1.EVENT_CREATE_TS)</outergroup>
		<outerorder>ORDER BY PROVIDER_VIOLATION_COUNT, PROVIDER_NAME_VIOLATION_TRENDS</outerorder>
		<requiredcolumns>PROVIDER_NAME_VIOLATION_TRENDS, PROVIDER_VIOLATION_PERIOD, PROVIDER_VIOLATION_COUNT</requiredcolumns>
	</id>
	<id value="53">
		<query>SELECT COUNT(*) AS PROVIDER_SLA_COUNT,PROVIDER AS PROVIDER_NAME_SLA_VIOLATION FROM CLS_MON_EVENT</query>
		<where>WHERE ALERT_TYPE='Sla' AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY PROVIDER</group>
		<order>ORDER BY PROVIDER_SLA_COUNT DESC LIMIT 5</order>
		<requiredcolumns>PROVIDER_SLA_COUNT,PROVIDER_NAME_SLA_VIOLATION</requiredcolumns>
	</id>
	<id value="54">
		<query>SELECT COUNT(*) AS CONSUMER_SLA_COUNT,CONSUMER_NAME AS CONSUMER_NAME_SLA_VIOLATION FROM CLS_MON_EVENT</query>
		<where>WHERE ALERT_TYPE='Sla' AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY CONSUMER_NAME</group>
		<order>ORDER BY CONSUMER_SLA_COUNT DESC LIMIT 5</order>
		<requiredcolumns>CONSUMER_SLA_COUNT,CONSUMER_NAME_SLA_VIOLATION</requiredcolumns>
	</id>
	<id value="55">
		<query>SELECT COUNT(*) AS SERVICE_SLA_COUNT,service_name AS SERVICE_NAME_SLA_VIOLATION FROM CLS_MON_EVENT</query>
		<where>WHERE ALERT_TYPE='Sla' AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY SERVICE_NAME</group>
		<order>ORDER BY SERVICE_SLA_COUNT DESC LIMIT 5</order>
		<requiredcolumns>SERVICE_SLA_COUNT,SERVICE_NAME_SLA_VIOLATION</requiredcolumns>
	</id>
	<id value="56">
		<query>SELECT COUNT(*) AS SERVICE_MON_COUNT,SERVICE_NAME AS SERVICE_NAME_MON FROM CLS_MON_EVENT</query>
		<where>WHERE ALERT_TYPE='Monitor' AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY SERVICE_NAME</group>
		<order>ORDER BY SERVICE_MON_COUNT DESC LIMIT 5</order>
		<requiredcolumns>SERVICE_MON_COUNT,SERVICE_NAME_MON</requiredcolumns>
	</id>
	<id value="57">
		<query>SELECT COUNT(*) AS EVENT_SRC_MON_COUNT,EVENT_SOURCE AS EVENT_SOURCE_MON FROM CLS_MON_EVENT</query>
		<where>WHERE ALERT_TYPE='Monitor' AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY EVENT_SOURCE</group>
		<order>ORDER BY EVENT_SRC_MON_COUNT DESC LIMIT 5</order>
		<requiredcolumns>EVENT_SRC_MON_COUNT,EVENT_SOURCE_MON</requiredcolumns>
	</id>
	<id value="58">
		<query>SELECT COUNT(*) AS EVENT_SRC_SLA_COUNT,EVENT_SOURCE AS EVENT_SOURCE_SLA FROM CLS_MON_EVENT</query>
		<where>WHERE ALERT_TYPE='Sla' AND PROVIDER = {PROVIDER} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<group>GROUP BY EVENT_SOURCE</group>
		<order>ORDER BY EVENT_SRC_SLA_COUNT DESC LIMIT 5</order>
		<requiredcolumns>EVENT_SRC_SLA_COUNT,EVENT_SOURCE_SLA</requiredcolumns>
	</id>
	
	<!-- ServiceView -->
	<id value="61">
		<query>SELECT DISTINCT PROVIDER AS DISTINCT_PROVIDER FROM CLS_TXN_EVENT</query>
		<order>ORDER BY DISTINCT_PROVIDER</order>
		<requiredcolumns>DISTINCT_PROVIDER</requiredcolumns>
	</id>
	<id value="62">
		<query>SELECT DISTINCT CONNECTOR AS DISTINCT_CONNECTOR FROM CLS_TXN_EVENT</query>
		<order>ORDER BY DISTINCT_CONNECTOR</order>
		<where>WHERE  PROVIDER = {PROVIDER}</where>
		<requiredcolumns>DISTINCT_CONNECTOR</requiredcolumns>
	</id>
	<id value="63">
		<query>SELECT CEIL(COUNT(T3.PROVIDER)/50) AS PAGES FROM
			(SELECT T1.*,CASE WHEN T2.FAILURE_CNT IS NULL THEN 0 ELSE T2.FAILURE_CNT END AS FAILURE_CNT, 
                             CASE WHEN T2.FAILURE_CNT IS NULL THEN T1.TOTAL_CNT ELSE T1.TOTAL_CNT - T2.FAILURE_CNT END  AS SUCCESS_CNT 
			FROM (SELECT PROVIDER, CONNECTOR, SERVICE_NAME, ROUND(AVG(TOTAL_DATA_SIZE), 2) AVG_DATA_SIZE, ROUND(AVG(TOTAL_TIME), 2) AVG_TIME,COUNT(*) AS TOTAL_CNT 
					FROM   CLS_TXN_EVENT 
					WHERE  PROVIDER = {PROVIDER} AND CONNECTOR = {CONNECTOR} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP 
					GROUP  BY PROVIDER,CONNECTOR,SERVICE_NAME
				) AS  T1 
			FULL OUTER JOIN
				(SELECT PROVIDER, CONNECTOR, SERVICE_NAME, COUNT(*) AS FAILURE_CNT 
     				FROM   CLS_TXN_EVENT 
                    WHERE  STATUS != 'SUCCESS' AND PROVIDER = {PROVIDER} AND CONNECTOR = {CONNECTOR} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP 
                    GROUP  BY PROVIDER,SERVICE_NAME,CONNECTOR
				) AS T2 
			ON T1.PROVIDER = T2.PROVIDER AND T1.SERVICE_NAME = T2.SERVICE_NAME AND T1.CONNECTOR = T2.CONNECTOR) AS T3</query>
		<requiredcolumns>PAGES</requiredcolumns>
	</id>
	<id value="64">
		<query>SELECT SERVICE_VIEW1.* FROM
			(SELECT SERVICE_VIEW.*, ROW_NUMBER() OVER (ORDER BY SERVICE_VIEW.PROVIDER) AS ROWID
                FROM
					(SELECT T1.*,CASE WHEN T2.FAILURE_CNT IS NULL THEN 0 ELSE T2.FAILURE_CNT END AS FAILURE_CNT, 
                                CASE WHEN T2.FAILURE_CNT IS NULL THEN T1.TOTAL_CNT ELSE T1.TOTAL_CNT - T2.FAILURE_CNT END  AS SUCCESS_CNT 
						FROM (SELECT PROVIDER,CONNECTOR, SERVICE_NAME, ROUND(AVG(TOTAL_DATA_SIZE), 2) AVG_DATA_SIZE,ROUND(AVG(TOTAL_TIME), 2) AVG_TIME, COUNT(*) AS TOTAL_CNT 
							FROM CLS_TXN_EVENT 
							WHERE PROVIDER = {PROVIDER} AND CONNECTOR = {CONNECTOR} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP 
							GROUP BY PROVIDER, CONNECTOR, SERVICE_NAME
					) AS T1 
                    FULL OUTER JOIN
						(SELECT PROVIDER, CONNECTOR, SERVICE_NAME, COUNT(*) AS FAILURE_CNT 
							FROM CLS_TXN_EVENT
							WHERE STATUS != 'SUCCESS' AND PROVIDER = {PROVIDER} AND CONNECTOR = {CONNECTOR} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP
							GROUP BY PROVIDER,CONNECTOR,SERVICE_NAME
						) AS T2 
					ON T1.PROVIDER = T2.PROVIDER AND T1.SERVICE_NAME = T2.SERVICE_NAME AND T1.CONNECTOR = T2.CONNECTOR
                    ) AS SERVICE_VIEW
            ) AS SERVICE_VIEW1 
		WHERE SERVICE_VIEW1.ROWID BETWEEN {PAGESTART} AND {PAGEEND}</query>
		<requiredcolumns>PROVIDER,CONNECTOR,SERVICE_NAME,AVG_DATA_SIZE,AVG_TIME,TOTAL_CNT,FAILURE_CNT,SUCCESS_CNT</requiredcolumns>
	</id>
	
	<!-- TransactionView -->
	<id value="71">
		<query>SELECT DISTINCT PROVIDER AS DISTINCT_PROVIDER  FROM {EVENT_TYPE}</query>
		<where>WHERE PROVIDER IS NOT NULL</where>
		<order>ORDER BY DISTINCT_PROVIDER</order>
		<requiredcolumns>DISTINCT_PROVIDER</requiredcolumns>
	</id>
	<id value="72">
		<query>SELECT DISTINCT CONNECTOR AS DISTINCT_CONNECTOR   FROM {EVENT_TYPE}</query>
		<where>WHERE  PROVIDER = {PROVIDER} AND CONNECTOR IS NOT NULL</where>
		<order>ORDER BY DISTINCT_CONNECTOR</order>
		<requiredcolumns>DISTINCT_CONNECTOR</requiredcolumns>
	</id>
	<id value="73">
		<query>SELECT DISTINCT SERVICE_NAME AS DISTINCT_SERVICE_NAME   FROM {EVENT_TYPE}</query>
		<where>WHERE PROVIDER = {PROVIDER} AND CONNECTOR = {CONNECTOR} AND SERVICE_NAME IS NOT NULL</where>
		<order>ORDER BY DISTINCT_SERVICE_NAME</order>
		<requiredcolumns>DISTINCT_SERVICE_NAME</requiredcolumns>
	</id>
	<id value="74">
		<query>(SELECT EVENT_CREATE_TS,TARGET_NAME,SESSION_ID,SERVICE_NAME,CONNECTOR FROM {EVENT_TYPE}</query>
		<where>WHERE PROVIDER = {PROVIDER} AND CONNECTOR = {CONNECTOR} AND SERVICE_NAME = {SERVICE_NAME} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP ) AS T1</where>
		<outerquery>SELECT CEIL(COUNT(*)/50) PAGES FROM</outerquery>
		<requiredcolumns>PAGES</requiredcolumns>
	</id>
	<id value="75">
		<query>(SELECT TARGET_NAME,PROVIDER,CONNECTOR,SERVICE_NAME,SESSION_ID, 'N/A' AS SOURCE,'N/A' AS DESCRIPTION, 'N/A' AS STATUS, TO_CHAR(EVENT_CREATE_TS,'MM/DD/YYYY HH24:MI:SS') AS EVENT_CREATE_TIMESTAMP ,ROW_NUMBER() OVER (ORDER BY EVENT_CREATE_TS DESC) AS ROWID FROM {EVENT_TYPE}</query>
		<where>WHERE PROVIDER = {PROVIDER} AND CONNECTOR = {CONNECTOR} AND SERVICE_NAME = {SERVICE_NAME} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<order>ORDER BY EVENT_CREATE_TS DESC)</order>
		<outerquery>SELECT CLS_ERR_EVENT1.* FROM</outerquery>
		<outerwhere>AS CLS_ERR_EVENT1  WHERE CLS_ERR_EVENT1.ROWID BETWEEN  {PAGESTART}  AND {PAGEEND}</outerwhere>
		<requiredcolumns>TARGET_NAME,PROVIDER,CONNECTOR,SERVICE_NAME,SESSION_ID,SOURCE,DESCRIPTION,STATUS,EVENT_CREATE_TS</requiredcolumns>
	</id>
	<!-- TransactionView_Error_Event -->
	<id value="76">
		<query>(SELECT TARGET_NAME,PROVIDER,CONNECTOR,SERVICE_NAME,SESSION_ID, ERROR_SOURCE AS SOURCE,ERROR_DESC AS DESCRIPTION, 'N/A' AS STATUS, TO_CHAR(EVENT_CREATE_TS,'MM/DD/YYYY HH24:MI:SS') AS EVENT_CREATE_TIMESTAMP, ROW_NUMBER() OVER (ORDER BY EVENT_CREATE_TS DESC) AS ROWID FROM {EVENT_TYPE}</query>
		<where>WHERE PROVIDER = {PROVIDER} AND CONNECTOR = {CONNECTOR} AND SERVICE_NAME = {SERVICE_NAME} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<order>ORDER BY EVENT_CREATE_TS DESC)</order>
		<outerquery>SELECT CLS_ERR_EVENT1.* FROM</outerquery>
		<outerwhere>AS CLS_ERR_EVENT1 WHERE CLS_ERR_EVENT1.ROWID BETWEEN {PAGESTART} AND {PAGEEND}</outerwhere>
		<requiredcolumns>TARGET_NAME,PROVIDER,CONNECTOR,SERVICE_NAME,SESSION_ID,SOURCE,DESCRIPTION,STATUS,EVENT_CREATE_TS</requiredcolumns>
	</id>
	<!-- TransactionView_Alert -->
	<id value="77">
		<query>(SELECT TARGET_NAME,PROVIDER,CONNECTOR,SERVICE_NAME,SESSION_ID, ALERT_SOURCE AS SOURCE,ALERT_DESC AS DESCRIPTION,'N/A' AS STATUS,TO_CHAR(EVENT_CREATE_TS,'MM/DD/YYYY HH24:MI:SS') AS EVENT_CREATE_TIMESTAMP, ROW_NUMBER() OVER (ORDER BY EVENT_CREATE_TS DESC) AS ROWID FROM {EVENT_TYPE}</query>
		<where>WHERE PROVIDER = {PROVIDER} AND CONNECTOR = {CONNECTOR} AND SERVICE_NAME = {SERVICE_NAME} AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<order>ORDER BY EVENT_CREATE_TS DESC)</order>
		<outerquery>SELECT CLS_ERR_EVENT1.* FROM</outerquery>
		<outerwhere>AS CLS_ERR_EVENT1  WHERE CLS_ERR_EVENT1.ROWID BETWEEN  {PAGESTART}  AND {PAGEEND}</outerwhere>
		<requiredcolumns>TARGET_NAME,PROVIDER,CONNECTOR,SERVICE_NAME,SESSION_ID,SOURCE,DESCRIPTION,STATUS,EVENT_CREATE_TS</requiredcolumns>
	</id>
	
	<!---For LifeCycle Event-->
	<id value="78">
		<query>SELECT 'N/A' AS DISTINCT_PROVIDER ,'N/A' AS DISTINCT_CONNECTOR,'N/A' AS DISTINCT_SERVICE_NAME  FROM {EVENT_TYPE}</query>
		<requiredcolumns>DISTINCT_PROVIDER,DISTINCT_CONNECTOR,DISTINCT_SERVICE_NAME</requiredcolumns>
	</id>
	<id value="79">
		<query>(SELECT EVENT_CREATE_TS,TARGET_NAME,'N/A' AS SESSION_ID,'N/A' AS SERVICE_NAME,'N/A' AS CONNECTOR FROM {EVENT_TYPE}</query>
		<where>WHERE TARGET_NAME IS NOT NULL AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP ) AS T1</where>
		<outerquery>SELECT CEIL(COUNT(*)/50) AS PAGES FROM</outerquery>
		<requiredcolumns>PAGES</requiredcolumns>
	</id>
	<id value="80">
		<query>(SELECT TARGET_NAME,'N/A' AS PROVIDER,'N/A' AS CONNECTOR,'N/A' AS SERVICE_NAME,'N/A' AS SESSION_ID, 'N/A' AS SOURCE,'N/A' AS DESCRIPTION, EVENT_STATUS AS STATUS,TO_CHAR(EVENT_CREATE_TS,'MM/DD/YYYY HH24:MI:SS') AS EVENT_CREATE_TIMESTAMP ,ROW_NUMBER() OVER (ORDER BY EVENT_CREATE_TS DESC) AS ROWID FROM {EVENT_TYPE}</query>
		<where>WHERE TARGET_NAME IS NOT NULL AND EVENT_CREATE_TS BETWEEN CURRENT_TIMESTAMP - {PERIOD} AND CURRENT_TIMESTAMP</where>
		<order>ORDER BY EVENT_CREATE_TS DESC)</order>
		<outerquery>SELECT CLS_ERR_EVENT1.* FROM</outerquery>
		<outerwhere>AS CLS_ERR_EVENT1  WHERE CLS_ERR_EVENT1.ROWID BETWEEN  {PAGESTART}  AND {PAGEEND}</outerwhere>
		<requiredcolumns>TARGET_NAME,PROVIDER,CONNECTOR,SERVICE_NAME,SESSION_ID,SOURCE,DESCRIPTION,STATUS,EVENT_CREATE_TS</requiredcolumns>
	</id>
</QUERIES>